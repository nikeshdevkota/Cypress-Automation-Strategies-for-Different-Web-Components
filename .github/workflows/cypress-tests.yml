name: Cypress Tests

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  cypress-tests:
    # Only run if PR is merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Extract JIRA IDs from PR
        id: extract-jira
        run: |
          # Get the PR title and body
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          
          # Get the branch name that was merged
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          echo "Merged branch: $BRANCH_NAME"
          
          # Extract JIRA IDs from branch name
          BRANCH_JIRA_IDS=$(echo "$BRANCH_NAME" | grep -oE 'JIRA-[0-9]+' | sort -u)
          
          # Extract JIRA IDs from PR title and body
          PR_JIRA_IDS=$(echo -e "$PR_TITLE\n$PR_BODY" | grep -oE 'JIRA-[0-9]+' | sort -u)
          
          # Combine and deduplicate JIRA IDs
          ALL_JIRA_IDS=$(echo -e "$BRANCH_JIRA_IDS\n$PR_JIRA_IDS" | sort -u | grep -v '^$')
          
          # Convert to comma-separated list
          JIRA_IDS_CSV=$(echo "$ALL_JIRA_IDS" | paste -sd "," -)
          
          echo "Found JIRA IDs: $JIRA_IDS_CSV"
          echo "jira_ids=$JIRA_IDS_CSV" >> $GITHUB_OUTPUT

      - name: Run Cypress tests for each JIRA ID
        if: steps.extract-jira.outputs.jira_ids != ''
        run: |
          # Read JIRA IDs into an array
          IFS=',' read -ra JIRA_IDS <<< "${{ steps.extract-jira.outputs.jira_ids }}"
          
          # Run tests for each JIRA ID separately
          for JIRA_ID in "${JIRA_IDS[@]}"; do
            echo "Running tests for $JIRA_ID"
            
            # Run Cypress with specific JIRA tag
            npx cypress run --env grepTags="$JIRA_ID" --config video=false
            
            # Move the report to a JIRA-specific file
            if [ -f "cypress/reports/mocha/mochawesome.json" ]; then
              mkdir -p "cypress/reports/jira"
              cp "cypress/reports/mocha/mochawesome.json" "cypress/reports/jira/${JIRA_ID}.json"
              
              # Generate HTML report for this JIRA ID
              npx mochawesome-merge "cypress/reports/jira/${JIRA_ID}.json" > "cypress/reports/jira/${JIRA_ID}-merged.json"
              npx mochawesome-report-generator "cypress/reports/jira/${JIRA_ID}-merged.json" --reportDir "cypress/reports/jira/${JIRA_ID}" --reportTitle "${JIRA_ID} Test Results"
            fi
          done

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results
          path: |
            cypress/reports/jira
            cypress/screenshots
            cypress/videos

      - name: Create Summary
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "Tests were run for the following JIRA tickets:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          for JIRA_ID in ${{ steps.extract-jira.outputs.jira_ids }}; do
            echo "- [$JIRA_ID](./cypress-results/$JIRA_ID/mochawesome.html)" >> $GITHUB_STEP_SUMMARY
          done 